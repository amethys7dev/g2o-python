name: Wheels

on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'

jobs:
  build_wheels:
    name: Wheels on ${{ matrix.os_dist.os }} for ${{ matrix.os_dist.dist}}

    runs-on: ${{ matrix.os_dist.os }}
    strategy:
      fail-fast: false
      matrix:
        os_dist: [
          {os: ubuntu-latest, dist: cp36-manylinux_x86_64},
          {os: ubuntu-latest, dist: cp37-manylinux_x86_64},
          {os: ubuntu-latest, dist: cp38-manylinux_x86_64},
          {os: ubuntu-latest, dist: cp39-manylinux_x86_64},
          {os: ubuntu-latest, dist: cp310-manylinux_x86_64},
          {os: ubuntu-latest, dist: cp311-manylinux_x86_64},
        ]
    env:
      CIBW_BUILD: "${{ matrix.os_dist.dist }}"
      CIBW_ARCHS_MACOS: "${{ matrix.os_dist.macosarch }}"
    steps:
      - uses: actions/checkout@v3
      # Used to host cibuildwheel
      - uses: actions/setup-python@v3
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.12.0
      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  make_sdist:
    name: Make SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Build SDist
      run: pipx run build --sdist
    - uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz

  upload_all:
    if: ${{ always() }}
    needs: [build_wheels, make_sdist]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist
    - uses: pypa/gh-action-pypi-publish@v1.6.4
      with:
        skip_existing: true
        user: __token__
        password: ${{ secrets.pypi_password }}
